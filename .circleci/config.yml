version: 2.1

jobs:
  test-backend:
    docker:
      - image: python:3.8
      - image: postgres:12
        environment:
          POSTGRES_PASSWORD: test
      - image: redis:6.0
    steps:
      - checkout
      - restore_cache:
          key: colorific-{{ checksum "requirements/main.txt" }}
      - run:
          name: Create virtual environment
          command: test -d .venv || python -m venv .venv
      - run:
          name: Install requirements
          command: .venv/bin/pip install -r requirements/main.txt
      - save_cache:
          key: colorific-{{ checksum "requirements/main.txt" }}
          paths:
            - .venv
      - run:
          name: Run tests
          command: source .venv/bin/activate && make test
          environment:
            POSTGRES_TEST_USER: postgres
            POSTGRES_TEST_PASSWORD: test
            POSTGRES_TEST_DB: postgres
            POSTGRES_TEST_HOST: localhost
            POSTGRES_TEST_PORT: 5432
            REDIS_HOST: localhost
            REDIS_PORT: 6379
            OMP_NUM_THREADS: 1
            IMAGE_INDEXING: false
            CORS_ALLOW_ORIGIN: '*'

  test-backend-temp:
    docker:
      - image: python:3.8
    steps:
      - checkout
      - run:
          name: Running temp job
          command: echo OK

  build-and-deploy-frontend:
    docker:
      - image: node:14.5
    steps:
      - checkout
      - restore_cache:
          key: colorific-frontend-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install dependencies with NPM
          working_directory: ./frontend
          command: npm install
      - save_cache:
          key: colorific-frontend-{{ checksum "frontend/package-lock.json" }}
          paths:
            - frontend/node_modules
      - run:
          name: Build Angular application
          working_directory: ./frontend
          command: ./node_modules/@angular/cli/bin/ng build -c production
      - run:
          name: Deploy Angular application
          command: |
            ssh -o "StrictHostKeyChecking no" ubuntu@ec2-35-173-202-9.compute-1.amazonaws.com "rm -rf ~/colorific/frontend/dist"
            scp -r frontend/dist ubuntu@ec2-35-173-202-9.compute-1.amazonaws.com:~/colorific/frontend/dist

  deploy-backend:
    docker:
      - image: ubuntu:20.04
    steps:
      - run:
          name: Deploy Angular application
          command: >
            ssh -o "StrictHostKeyChecking no"
            ubuntu@ec2-35-173-202-9.compute-1.amazonaws.com
            "cd colorific && git checkout master && git pull &&
            docker-compose down && docker-compose run --build -d nginx"

workflows:
  main:
    jobs:
      - test-backend-temp
      - build-and-deploy-frontend:
          requires:
            - test-backend-temp
          filters:
            branches:
              only: F22-frontend-wrap-up
      - deploy-backend:
          requires:
            - build-and-deploy-frontend
          filters:
            branches:
              only: F22-frontend-wrap-up
